@import 'tailwindcss';

@layer base {
	@font-face {
		font-family: 'HostGrotesk';
		src: url('./assets/HostGrotesk.woff2') format('woff2');
		font-style: normal;
		font-weight: 400 700;
		font-display: swap;
	}

	:root {
		--font-sans: 'HostGrotesk', system-ui, sans-serif;
	}

	html {
		font-family: 'HostGrotesk', system-ui, sans-serif;
	}
}

/* Define standard CSS animations as fallback */
@keyframes float {
	0%,
	100% {
		transform: translateY(0);
	}
	50% {
		transform: translateY(-20px);
	}
}

@keyframes glitch-1 {
	0%,
	100% {
		transform: translate(-2px, 0);
	}
	25% {
		transform: translate(2px, 2px);
	}
	50% {
		transform: translate(-2px, 1px);
	}
	75% {
		transform: translate(3px, -1px);
	}
}

@keyframes glitch-2 {
	0%,
	100% {
		transform: translate(2px, 0);
	}
	25% {
		transform: translate(-2px, -2px);
	}
	50% {
		transform: translate(2px, -1px);
	}
	75% {
		transform: translate(-3px, 1px);
	}
}

@keyframes loading-bar {
	0% {
		transform: translateX(-100%);
	}
	50%,
	100% {
		transform: translateX(100%);
	}
}

/* Define animation classes */
.animate-float {
	animation: float 6s ease-in-out infinite;
}

.animate-glitch-1 {
	animation: glitch-1 5s infinite linear alternate-reverse;
}

.animate-glitch-2 {
	animation: glitch-2 5s infinite linear alternate-reverse;
}

.animate-loading-bar {
	animation: loading-bar 2s infinite linear;
}

.animate-spin-slow {
	animation: spin 15s linear infinite;
}

.button-keyboard {
	position: relative;
	display: inline-block;
	padding: 10px 20px;
	border-radius: 8px;
	background-color: #f0f0f0;
	color: #333;
	font-weight: 600;
	text-align: center;
	border: 1px solid #ccc;
	box-shadow: 0 4px 0 0 rgba(0, 0, 0, 0.3);
	transition: all 0.1s ease-in-out;
	user-select: none;
	cursor: pointer;
}

/* Efecto hover */
.button-keyboard:hover {
	background-color: #e8e8e8;
}

/* Efecto al hacer clic */
.button-keyboard:active {
	transform: translateY(3px);
	box-shadow: 0 1px 0 0 rgba(0, 0, 0, 0.3);
}

/* Animación de pulsación automática */
.button-animate {
	animation: keyboard-press 0.25s ease-in-out;
}

/* Variante para animación continua (útil para demos) */
.button-animate-loop {
	animation: keyboard-press 1.5s ease-in-out infinite;
}

@keyframes fadeIn {
	from {
		opacity: 0;
	}
	to {
		opacity: 1;
	}
}

.animate-fadeIn {
	animation: fadeIn 0.3s ease-out forwards;
}
